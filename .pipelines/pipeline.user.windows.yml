environment:
  host:
    os: 'windows'
    flavor: 'server'
    version: '2016'
  runtime:
    provider: 'appcontainer'
    image: 'cdpxwinrs5.azurecr.io/global/vse2019/16.3.7:latest'
    source_mode: 'map'

artifact_publish_options:
  publish_to_legacy_artifacts: false
  publish_to_pipeline_artifacts: true
  publish_to_cloudvault_artifacts: false

# Enable signing on all declared artifacts.
signing_options:
  profile: 'external_distribution'
  codesign_validation_glob_pattern: 'regex|.+(?:exe|dll)$;-|*.nd.dll;-|.gdn\\**'

static_analysis_options:
  moderncop_options:
    files_to_scan:
      - from: '.\'
        exclude:
          - '**/*.svg'
        include:
          - '**/*'

  policheck_options:
    files_to_scan:
      - exclude:
        - '**/*.svg'

  binskim_options:
    files_to_scan:
      - exclude:
        - '**/*.svg'

package_sources:
  npm:
    feeds:
      registry: https://powerbi.pkgs.visualstudio.com/_packaging/SDK.Externals/npm/registry/

version:
  major: 1          # <---- Required field but not being used for 'custom' scheme
  minor: 0          # <---- Required field but not being used for 'custom' scheme
  system: 'custom'  # <---- Set this to 'custom'. we will build the version using package.json in versioning commands.

versioning:
  commands:
    - !!defaultcommand
      name: 'Set Version'
      arguments: 'version.ps1'
      command: '.pipelines\cdpx_run_ps.cmd'

restore:
  commands:
    - !!defaultcommand
      name: 'Install NPM'
      arguments: 'restore.ps1'
      command: '.pipelines\cdpx_run_ps.cmd'

# Commands to run during the packaging stage.
package:
  commands:
    - !!buildcommand
      name: 'Package'
      arguments: 'package.ps1'
      command: '.pipelines\cdpx_run_ps.cmd'
      artifacts:
        - to: 'tgz-package'
          include:
            - "**/*.tgz"
